
<aside
  id="logo-sidebar"
  class="fixed top-0 left-0 z-40 w-64 h-screen pt-20 transition-transform -translate-x-full bg-bg-200 border-r border-bg-300 sm:translate-x-0"
  aria-label="Sidebar"
>
  <div class="h-full flex flex-col px-3 pb-4 overflow-y-auto bg-bg-200">
    <!-- New Chat Button -->
    <button class="w-full mb-4 py-2 px-4 flex items-center justify-center rounded-full bg-brand text-text-100 hover:bg-accent-100 transition">
      <svg
        class="w-5 h-5 mr-2"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        viewBox="0 0 24 24"
      >
        <path stroke-linecap="round" stroke-linejoin="round" d="M12 4v16m8-8H4" />
      </svg>
      New Chat
    </button>
    <!-- Chat List -->
    <div class="flex-1 overflow-y-auto">
      <ul class="space-y-1">
        <li>
          <a
            href="#"
            class="flex items-center px-3 py-2 rounded-lg bg-bg-300 text-text-100 hover:bg-accent-100 transition"
          >
            <span class="truncate">AI Project Ideas</span>
          </a>
        </li>
        <li>
          <a
            href="#"
            class="flex items-center px-3 py-2 rounded-lg text-text-100 hover:bg-accent-100 transition"
          >
            <span class="truncate">Travel Planning</span>
          </a>
        </li>
        <li>
          <a
            href="#"
            class="flex items-center px-3 py-2 rounded-lg text-text-100 hover:bg-accent-100 transition"
          >
            <span class="truncate">Code Review</span>
          </a>
        </li>
      </ul>
    </div>
    <!-- Log Out Button -->
    <button class="w-full mt-4 py-2 px-4 flex items-center justify-center rounded-full bg-bg-300 text-text-100 hover:bg-accent-100 transition">
      <svg
        class="w-5 h-5 mr-2"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        viewBox="0 0 24 24"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a2 2 0 01-2 2H7a2 2 0 01-2-2V7a2 2 0 012-2h4a2 2 0 012 2v1"
        />
      </svg>
      Log out
    </button>
  </div>
</aside>
<!-- Sidebar End -->

<div class="sm:ml-64 h-[calc(100vh-0.5rem)] flex flex-col">
  <!-- Centered chat wrapper for messages and input, with responsive max width and horizontal padding -->
  <div class="flex flex-col flex-1 bg-bg-100 max-w-3xl w-full mx-auto px-4 lg:px-0">
    
<!-- Chat messages area -->
    <div class="flex-1 overflow-y-auto p-4 lg:p-8 space-y-3 lg:space-y-2">
      <!-- User message (right-aligned) -->
      <div class="flex justify-end">
        <div class="rounded-xl px-5 py-3 bg-bg-300 text-text-100 max-w-xl ml-8">
          <span class="font-semibold text-brand">You:</span>
          How can I implement streaming in Phoenix LiveView?
        </div>
      </div>
      <!-- AI message (wider, bg matches chat bg) -->
      <div class="flex">
        <div class="rounded-xl px-6 py-4 bg-bg-100 text-text-100 max-w-2xl w-full">
          <span class="font-semibold text-accent-200">AI:</span>
          You can use LiveView's handle_info callbacks to push streaming updates to the client. Would you like a code example?
        </div>
      </div>
      <!-- User message 2 (right-aligned) -->
      <div class="flex justify-end">
        <div class="rounded-xl px-5 py-3 bg-bg-300 text-text-100 max-w-xl ml-8">
          <span class="font-semibold text-brand">You:</span> Yes, please!
        </div>
      </div>
      <!-- AI message 2 (wider, bg matches chat bg) -->
      <div class="flex">
        <div class="rounded-xl px-6 py-4 bg-bg-100 text-text-100 max-w-2xl w-full">
          <span class="font-semibold text-accent-200">AI:</span>
          Sure! Here is a minimal example using Task and Phoenix.PubSub...
        </div>
      </div>
      <!-- User message 3 (right-aligned, multiline) -->
      <div class="flex justify-end">
        <div class="rounded-xl px-5 py-3 bg-bg-300 text-text-100 max-w-xl ml-8">
          <span class="font-semibold text-brand">You:</span>
          Thank you!\nCan I use this for streaming LLM tokens?
        </div>
      </div>
      <!-- AI message 3 (wider, bg matches chat bg) -->
      <div class="flex">
        <div class="rounded-xl px-6 py-4 bg-bg-100 text-text-100 max-w-2xl w-full">
          <span class="font-semibold text-accent-200">AI:</span>
          Yes, you can adapt this pattern for LLM token streaming. Let me know if you want a more detailed example!
        </div>
      </div>
      <!-- User message 3 -->
      <div class="flex justify-end">
        <div class="rounded-xl px-5 py-3 bg-bg-300 text-text-100 max-w-xl ml-8">
          <span class="font-semibold text-brand">You:</span> Can you explain how it works?
        </div>
      </div>
      <div class="flex">
        <div class="rounded-xl px-6 py-4 bg-bg-100 text-text-100 max-w-2xl w-full">
          <span class="font-semibold text-accent-200">AI:</span>
          It's a bit complex, but the basic idea is to use Task to run a long-running process in the background, and Phoenix.PubSub to push updates to the client as the process progresses. Would you like me to explain it in more detail?
        </div>
      </div>
      <!-- User message 4 -->
      <div class="flex justify-end">
        <div class="rounded-xl px-5 py-3 bg-bg-300 text-text-100 max-w-xl ml-8">
          <span class="font-semibold text-brand">You:</span> Can you explain how it works?
        </div>
      </div>
      <div class="flex">
        <div class="rounded-xl px-6 py-4 bg-bg-100 text-text-100 max-w-2xl w-full">
          <span class="font-semibold text-accent-200">AI:</span>
          It's a bit complex, but the basic idea is to use Task to run a long-running process in the background, and Phoenix.PubSub to push updates to the client as the process progresses. Would you like me to explain it in more detail?
        </div>
      </div>
    </div>
    <!-- Input area -->

      <!-- Sticky input area at the bottom, width synced with chat area -->
      <div class="sticky bottom-0 z-20 bg-bg-100 pt-2 pb-2">
        <form id="chat-input-form" class="w-full max-w-2xl mx-auto" phx-hook="ChatSendButton">
          <div class="flex flex-col w-full bg-bg-300 rounded-2xl px-4 py-3 shadow-inner gap-2 relative">
            <textarea
              id="chat-input-textarea"
              phx-hook="ChatInputAutoGrow"
              rows="1"
              maxlength="1000"
              placeholder="Type your message..."
              class="resize-none flex-1 bg-transparent text-text-100 px-2 py-2 pr-12 focus:outline-none focus:ring-0 border-none min-h-[40px] max-h-[144px] overflow-y-auto rounded-md"
              style="line-height: 1.5;"
            ></textarea>
            <div class="flex items-center gap-2 mt-2">
              <!-- Send Button, absolutely positioned bottom right -->
              <button
                id="chat-send-btn"
                type="submit"
                class="absolute bottom-4 right-4 rounded-full bg-bg-200 text-text-100 p-2 hover:bg-accent-100 focus:outline-none disabled:opacity-50 transition flex items-center justify-center [disabled]:hover:bg-bg-200 [disabled]:cursor-not-allowed"
                disabled
              >
                <svg
                  class="w-5 h-5"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="M12 19V5m0 0l6 6m-6-6l-6 6"
                  />
                </svg>
              </button>
              <!-- Model Dropdown -->
              <select class="rounded-full bg-bg-200 text-text-100 px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-brand border-none">
                <option>GPT-4</option>
                <option>Claude 3</option>
                <option>Mistral</option>
              </select>
              <!-- Attach -->
              <div class="relative">
                <button
                  type="button"
                  class="rounded-full bg-bg-200 text-text-100 p-2 hover:bg-accent-100 focus:outline-none"
                >
                  <svg
                    class="w-5 h-5"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="2"
                    viewBox="0 0 24 24"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      d="M15.172 7l-6.586 6.586a2 2 0 002.828 2.828l7.071-7.071a4 4 0 00-5.657-5.657l-8.485 8.485a6 6 0 108.485 8.485L19 13"
                    />
                  </svg>
                </button>
                <!-- Attach dropdown menu mock -->
                <div class="hidden absolute left-0 mt-2 w-40 rounded-md shadow-lg bg-bg-200 ring-1 ring-black ring-opacity-5 z-10">
                  <div class="py-1 text-text-100">
                    <a href="#" class="block px-4 py-2 hover:bg-bg-300 rounded">Upload file</a>
                    <a href="#" class="block px-4 py-2 hover:bg-bg-300 rounded">
                      From Google Drive
                    </a>
                  </div>
                </div>
              </div>

            </div>
          </div>
        </form>
      </div>
  </div>
  <!-- Chat Main Area End -->
</div>
